// Code generated by MockGen. DO NOT EDIT.
// Source: router.go

// Package mock is a generated GoMock package.
package mock

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRouter is a mock of IRouter interface.
type MockIRouter struct {
	ctrl     *gomock.Controller
	recorder *MockIRouterMockRecorder
}

// MockIRouterMockRecorder is the mock recorder for MockIRouter.
type MockIRouterMockRecorder struct {
	mock *MockIRouter
}

// NewMockIRouter creates a new mock instance.
func NewMockIRouter(ctrl *gomock.Controller) *MockIRouter {
	mock := &MockIRouter{ctrl: ctrl}
	mock.recorder = &MockIRouterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRouter) EXPECT() *MockIRouterMockRecorder {
	return m.recorder
}

// PingHandler mocks base method.
func (m *MockIRouter) PingHandler(rw io.Writer, r io.Reader) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PingHandler", rw, r)
}

// PingHandler indicates an expected call of PingHandler.
func (mr *MockIRouterMockRecorder) PingHandler(rw, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingHandler", reflect.TypeOf((*MockIRouter)(nil).PingHandler), rw, r)
}
